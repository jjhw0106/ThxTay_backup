<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.tt.Host.HostAnalysisDao">
	<insert id="insertBank" parameterType="com.tt.Host.TransactionRegisterVO">
		insert into Thxtay_transaction_register
		(tr_no, user_no, tr_name, tr_email, tr_birth, tr_phone, tr_currency, tr_payment, tr_bank_code, tr_account)
		values
		(tr_seq.nextval, #{userNo}, #{name}, #{email}, #{birth}, #{phone}, #{currency}, #{payment}, #{bankCode}, #{account} )
	</insert>
	
	<select id="getTransactionHistoryByUserNo" parameterType="int" resultType="com.tt.Host.TransactionRegisterVO">
		select R.tr_account account, R.tr_no no
		from thxtay_transaction_Register R, thxtay_user U
		where U.user_no = #{userNo}
		and U.user_no = R.user_no
	</select>
	
	<select id="getAllTransactionHistoryByUserNo" parameterType="int" resultType="com.tt.Host.TransactionHistoryDTO">
		select     
			TR.tr_no trNo,
			TH.transaction_created_date createdDate, 
			U.user_name userName, 
			TR.tr_account bankAccount, 
			B.booking_no bookingNo, 
			L.lodging_name lodgingName, 
			B.booking_date bookingDate,       
			B.booking_check_in checkIn, 
			B.booking_check_out checkOut,
			P.price_lodging_fee lodgingFee, 
			P.price_cleaning_fee cleaningFee,
			B.booking_amount amount,
			trunc(B.booking_amount * 0.2) hostFee,
			trunc(B.booking_amount - (B.booking_amount * 0.2)) paidOut
	   
			from thxtay_user U, thxtay_lodging L, thxtay_booking B,
			        thxtay_transaction_register TR, thxtay_price P,
			        thxtay_transaction_history TH, thxtay_payment PM
			where U.user_no = #{userNo}
			and U.user_no = L.user_no
			and L.lodging_no = B.lodging_no
			and U.user_no = TR.user_no 
			and L.lodging_no = P.lodging_no 
			and TH.price_no = P.price_no
			and th.payment_no = pm.payment_no
			and pm.booking_no = b.booking_no
			and TH.tr_no = TR.tr_no
			and B.booking_check_out &lt; sysdate
	</select>

	<select id="getAllTransactionHistoryByHashMap" parameterType="map" resultType="com.tt.Host.TransactionHistoryDTO">
		select th.transaction_no,
			th.tr_no trNo,
			TH.transaction_created_date createdDate, 
			U.user_name userName, 
			TR.tr_account bankAccount, 
			B.booking_no bookingNo, 
			L.lodging_name lodgingName, 
			B.booking_date bookingDate,       
			B.booking_check_in checkIn, 
			B.booking_check_out checkOut,
			P.price_lodging_fee lodgingFee, 
			P.price_cleaning_fee cleaningFee,
			B.booking_amount amount,
			trunc(B.booking_amount * 0.2) hostFee,
			trunc(B.booking_amount - (B.booking_amount * 0.2)) paidOut
  
         from thxtay_user U, thxtay_lodging L, thxtay_booking B,
            thxtay_transaction_register TR, thxtay_price P,
            thxtay_transaction_history TH, thxtay_payment PM
         where U.user_no = #{userNo}
         and U.user_no = L.user_no
         and L.lodging_no = B.lodging_no
         and U.user_no = TR.user_no
         and L.lodging_no = P.lodging_no
         and TH.price_no = P.price_no
         and L.lodging_no = #{lodgingNo}
         and TH.transaction_created_date >= #{startDate}
         and TH.transaction_created_date &lt; add_months(#{endDate},1)
         and th.payment_no = pm.payment_no
         and pm.booking_no = b.booking_no
         and TH.tr_no = TR.tr_no
         and B.booking_check_out &lt; sysdate
	</select>

	<select id="getAllLodgingsByUserNo" parameterType="int" resultType="com.tt.Lodging.LodgingVO">
		select L.lodging_name name, L.lodging_no no
		from thxtay_lodging L, thxtay_user U
		where L.user_no = U.user_no
		and U.user_no = #{userNo}
	</select>

	<select id="getCommonCodeByPntCode" parameterType="string" resultType="com.tt.Common.CommonCodeVO">
		select commoncode, codecontent
		from thxtay_common_code
		where parentcode like #{value}
	</select>

</mapper>
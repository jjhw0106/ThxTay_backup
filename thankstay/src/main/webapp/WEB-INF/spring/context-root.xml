<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:annotation-config/>

	<context:component-scan base-package="com.tt.Common">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<context:component-scan base-package="com.tt.Explore">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<context:component-scan base-package="com.tt.Wishlist">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<context:component-scan base-package="com.tt.User">
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<context:component-scan base-package="com.tt.Host">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<context:component-scan base-package="com.tt.Admin">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<context:component-scan base-package="com.tt.Lodging">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<context:component-scan base-package="com.tt.Chat">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<context:property-placeholder location="classpath:/mybatis/*.properties"/>

	<!-- DB 접속정보 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
	p:driverClassName="${db.driverClassName}"
	p:url="${db.url}"
	p:username="${db.username}"
	p:password="${db.password}"/>

	<!-- 
		선언적 트랜잭션 처리를 지원하는 트랜잭션 매니저를  스프링 컨테이너의 빈으로 등록한다.
	 -->
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource"/>

	<!-- 
		@Transaction 어노테이션이 지정된 인터페이스/클래스/메소드에 선언적 트랜잭션처리를 지원하는 번들이 스프링 컨테이너의 빈으로 등록된다
	 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!--
		mybatis의 핵심객체인 SqlSessionFactiory객체를 스프링 컨테이너의 빈으로 등록시킨다.
		커넥션풀 객체, mybatis설정파일, mybatis 매퍼파일 정보를 의존성 주입해야 한다.
	-->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:configLocation="classpath:/mybatis/mybatis-config.xml"
		p:mapperLocations="classpath:/mybatis/mappers/*.xml"/>

	<!-- 
		@Scheduled 스케줄러 <task:annotation-driven/>
	<task:annotation-driven/>
	<context:component-scan base-package="com.tt.Host"/>
	 -->

	<!--
		지정된 패키지에서 mybatis용 Mapper 인터페이스(ProductDao, UserDao, OrderDao, ReviewDao,. CartDao 등)를 스캔해서
	-->
	<mybatis-spring:scan base-package="com.tt.User"		annotation="org.apache.ibatis.annotations.Mapper" factory-ref="sqlSessionFactory" />
	<mybatis-spring:scan base-package="com.tt.Admin"	annotation="org.apache.ibatis.annotations.Mapper" factory-ref="sqlSessionFactory" />
	<mybatis-spring:scan base-package="com.tt.Common"	annotation="org.apache.ibatis.annotations.Mapper" factory-ref="sqlSessionFactory" />
	<mybatis-spring:scan base-package="com.tt.Explore"	annotation="org.apache.ibatis.annotations.Mapper" factory-ref="sqlSessionFactory" />
	<mybatis-spring:scan base-package="com.tt.Host"		annotation="org.apache.ibatis.annotations.Mapper" factory-ref="sqlSessionFactory" />
	<mybatis-spring:scan base-package="com.tt.Lodging"	annotation="org.apache.ibatis.annotations.Mapper" factory-ref="sqlSessionFactory" />
	<mybatis-spring:scan base-package="com.tt.Chat" 	annotation="org.apache.ibatis.annotations.Mapper" factory-ref="sqlSessionFactory" />
	<mybatis-spring:scan base-package="com.tt.Wishlist"	annotation="org.apache.ibatis.annotations.Mapper" factory-ref="sqlSessionFactory" />
</beans>
